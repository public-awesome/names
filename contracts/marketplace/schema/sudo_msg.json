{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "SudoMsg",
  "oneOf": [
    {
      "description": "Update the contract parameters Can only be called by governance",
      "type": "object",
      "required": [
        "update_params"
      ],
      "properties": {
        "update_params": {
          "type": "object",
          "properties": {
            "blocks_per_year": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            },
            "min_price": {
              "anyOf": [
                {
                  "$ref": "#/definitions/Uint128"
                },
                {
                  "type": "null"
                }
              ]
            },
            "trading_fee_bps": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Update the contract address of the name minter",
      "type": "object",
      "required": [
        "update_name_minter"
      ],
      "properties": {
        "update_name_minter": {
          "type": "object",
          "required": [
            "minter"
          ],
          "properties": {
            "minter": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Update the contract address of the name collection",
      "type": "object",
      "required": [
        "update_name_collection"
      ],
      "properties": {
        "update_name_collection": {
          "type": "object",
          "required": [
            "collection"
          ],
          "properties": {
            "collection": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Add a new hook to be informed of all asks",
      "type": "object",
      "required": [
        "add_ask_hook"
      ],
      "properties": {
        "add_ask_hook": {
          "type": "object",
          "required": [
            "hook"
          ],
          "properties": {
            "hook": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Remove a ask hook",
      "type": "object",
      "required": [
        "remove_ask_hook"
      ],
      "properties": {
        "remove_ask_hook": {
          "type": "object",
          "required": [
            "hook"
          ],
          "properties": {
            "hook": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Add a new hook to be informed of all bids",
      "type": "object",
      "required": [
        "add_bid_hook"
      ],
      "properties": {
        "add_bid_hook": {
          "type": "object",
          "required": [
            "hook"
          ],
          "properties": {
            "hook": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Remove a bid hook",
      "type": "object",
      "required": [
        "remove_bid_hook"
      ],
      "properties": {
        "remove_bid_hook": {
          "type": "object",
          "required": [
            "hook"
          ],
          "properties": {
            "hook": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Add a new hook to be informed of all trades",
      "type": "object",
      "required": [
        "add_sale_hook"
      ],
      "properties": {
        "add_sale_hook": {
          "type": "object",
          "required": [
            "hook"
          ],
          "properties": {
            "hook": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Remove a trade hook",
      "type": "object",
      "required": [
        "remove_sale_hook"
      ],
      "properties": {
        "remove_sale_hook": {
          "type": "object",
          "required": [
            "hook"
          ],
          "properties": {
            "hook": {
              "type": "string"
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
